<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.versh</groupId>
	<artifactId>CNNonSpark</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<!-- Scala binary version: DL4J's Spark and UI functionality are released 
			with both Scala 2.10 and 2.11 support -->
		<java.version>1.8</java.version>
		<scala.binary.version>2.11</scala.binary.version>
		<datavec.version>1.0.0-beta6</datavec.version>
		<nd4j.version>1.0.0-beta6</nd4j.version>
		<dl4j.version>1.0.0-beta6</dl4j.version>
		<nd4j.backend>nd4j-native-platform</nd4j.backend>
		<exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
		<maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
		<maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.datavec</groupId>
			<artifactId>datavec-spark_${scala.binary.version}</artifactId>
			<version>${datavec.version}</version>
		</dependency>

		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>${nd4j.backend}</artifactId>
			<version>${nd4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>dl4j-spark_${scala.binary.version}</artifactId>
			<version>${dl4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>dl4j-spark-parameterserver_${scala.binary.version}</artifactId>
			<version>${dl4j.version}</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>java</executable>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade-plugin.version}</version>
				<configuration>
					<shadedArtifactAttached>true</shadedArtifactAttached>
					<shadedClassifierName>${shadedClassifier}</shadedClassifierName>
					<createDependencyReducedPom>true</createDependencyReducedPom>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>org/datanucleus/**</exclude>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>

				</configuration>

				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>reference.conf</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.5</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>org.deeplearning4j.cluster.AnimalModelByHdfsSparkCluster</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
